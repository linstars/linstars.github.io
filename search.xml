<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo搭建</title>
      <link href="/2024/12/02/hexo%E6%90%AD%E5%BB%BA/"/>
      <url>/2024/12/02/hexo%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><p>搭建hexo首先需要有<a href="https://nodejs.org/zh-cn/">nodejs</a>的环境，可以从官网直接下载。</p><p>查看版本信息确认配置环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v # 查看node版本信息</span><br><span class="line">npm -v # 查看npm版本信息</span><br></pre></td></tr></table></figure><p><a href="https://git-scm.com/download/win">安装git</a></p><h2 id="配置sshKey"><a href="#配置sshKey" class="headerlink" title="配置sshKey"></a>配置sshKey</h2><p>首先在桌面右键打开git bash here</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;邮箱地址&quot;</span><br></pre></td></tr></table></figure><p>敲击三次回车</p><p>在C:\Users\用户名.ssh下找到id_rsa.pub文件并将内容复制</p><p>打开GitHub，右上角找到Settings，点击SSH and GPG keys，New ssh key，title随便起名字，key内容粘贴进去完后保存Add ssh key</p><p>打开git bash here输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>输入yes可以看到是否成功</p><h2 id="配置hexo"><a href="#配置hexo" class="headerlink" title="配置hexo"></a>配置hexo</h2><p>找到合适的存放hexo文件位置</p><p>在当前的文件下右键git bash here</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo install</span><br><span class="line">或者</span><br><span class="line">npx hexo install</span><br></pre></td></tr></table></figure><p>hexo g生成</p><p>hexo s本地部署</p><p>ctrl+c停止本地服务器</p><p>首先打开博客文件夹中config滑动到底部将type””替换成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">type: git</span><br><span class="line">repository:</span><br><span class="line">branch: main</span><br></pre></td></tr></table></figure><p>回到github仓库点code复制链接粘贴到repository后面保存退出</p><p>接着hexo g生成</p><p>hexo d部署线上</p><p>如果不行前面加上npx</p><p><img src="/images/hexo/image3.png"></p><p>因为第一次执行需要配置邮箱</p><p>复制上面git config –global user.email “邮箱.com”</p><p>到下面执行</p><p><img src="/images/hexo/image4.png"></p><p>配置完成后再次hexo d执行</p><p>在弹出的GitHub窗口页面进行登录,点击Sign in with your browser跳转浏览器进行登录</p><p><img src="/images/hexo/image5.png"></p><h2 id="hexo-d命令报错"><a href="#hexo-d命令报错" class="headerlink" title="hexo d命令报错"></a>hexo d命令报错</h2><p>ERROR Deployer not found: git</p><p>则是缺少插件</p><p>我已经在站点配置文件中写入了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: # Github pages地址</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>但是执行hexo d仍然报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR Deployer not found: git</span><br></pre></td></tr></table></figure><p>解决方案：</p><p>这是因为没安装<code>hexo-deployer-git</code>插件，在<strong>站点目录</strong>下输入下面的插件安装就好了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后在使用<code>Hexo d</code>命令就可以推送了。</p><h2 id="使用文档"><a href="#使用文档" class="headerlink" title="使用文档"></a>使用文档</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">参数 解释</span><br><span class="line">title 【必需】页面标题</span><br><span class="line">date 【必需】页面创建日期</span><br><span class="line">type 【必需】标签、分类和友情链接三个页面需要配置</span><br><span class="line">updated 【可选】页面更新日期</span><br><span class="line">description 【可选】页面描述</span><br><span class="line">keywords 【可选】页面关键词</span><br><span class="line">comments 【可选】显示页面评论模块 （默认 true）</span><br><span class="line">top_img 【可选】页面顶部图片</span><br><span class="line">mathjax 【可选】显示 mathjax （当设置 mathjax 的 per_page： false 时，才需要配置，默认 false）</span><br><span class="line">katex 【可选】显示 katex （当设置 katex 的 per_page： false 时，才需要配置，默认 false）</span><br><span class="line">aside 【可选】显示侧边栏 （默认 true）</span><br><span class="line">aplayer 【可选】在需要的页面加载 aplayer 的 js 和 css，请参考文章下面的 配置音樂</span><br><span class="line">highlight_shrink 【可选】配置代码框是否展开 （true/false） （默认为设置中 highlight_shrink 的配置）</span><br><span class="line">random 【可选】配置友情链接是否随机排序（默认为 false）</span><br><span class="line">limit 【可选】配置说显示数量</span><br><span class="line">limit.type 【可选】配置说显示数量的类型 （date 或者 num）</span><br><span class="line">limit.value 【可选】配置说显示数量的值</span><br></pre></td></tr></table></figure><p>常用指令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;postName&quot;        //新建文章</span><br><span class="line">hexo new page &quot;pageName&quot;        //新建页面</span><br><span class="line">hexo g          //生成静态页面至public目录</span><br><span class="line">hexo server         //开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）</span><br><span class="line">hexo deploy         //将.deploy目录部署到GitHub</span><br></pre></td></tr></table></figure><p>常用组合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br><span class="line">hexo d -g #生成部署</span><br><span class="line">hexo s -g #生成预览</span><br></pre></td></tr></table></figure><p>新建文章</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;xxx&quot;</span><br></pre></td></tr></table></figure><p>名为<code>xxx.md</code>的文件会建在目录<code>.../blog/source/_posts</code>下。所有的文章都会以<code>md</code>形式保存在_post文件夹中，只要在_post文件夹中新建md类型的文档，就能在执hexo g的时候被渲染。新建的文章头需要添加一些信息，如下所示：</p><h1 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h1><p><a href="https://butterfly.js.org/posts/4aa8abbe/">Butterfly 文檔(三) 主題配置 | Butterfly</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker使用</title>
      <link href="/2024/12/02/docker%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/12/02/docker%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h1><h2 id="使用官方安装脚本自动安装-（仅适用于公网环境）"><a href="#使用官方安装脚本自动安装-（仅适用于公网环境）" class="headerlink" title="使用官方安装脚本自动安装 （仅适用于公网环境）"></a>使用官方安装脚本自动安装 （仅适用于公网环境）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br></pre></td></tr></table></figure><h2 id="手动安装docker"><a href="#手动安装docker" class="headerlink" title="手动安装docker"></a>手动安装docker</h2><h3 id="CentOS安装"><a href="#CentOS安装" class="headerlink" title="CentOS安装"></a>CentOS安装</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"># step 1: 安装必要的一些系统工具</span><br><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"># Step 2: 添加软件源信息</span><br><span class="line">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"># Step 3: 更新并安装 Docker-CE</span><br><span class="line">sudo yum makecache fast</span><br><span class="line">sudo yum -y install docker-ce</span><br><span class="line"># Step 4: 开启Docker服务</span><br><span class="line">sudo service docker start</span><br><span class="line">sudo systemctl start docker</span><br><span class="line"></span><br><span class="line">注意：其他注意事项在下面的注释中</span><br><span class="line"># 官方软件源默认启用了最新的软件，您可以通过编辑软件源的方式获取各个版本的软件包。例如官方并没有将测试版本的软件源置为可用，你可以通过以下方式开启。同理可以开启各种测试版本等。</span><br><span class="line"># vim /etc/yum.repos.d/docker-ce.repo</span><br><span class="line">#   将 [docker-ce-test] 下方的 enabled=0 修改为 enabled=1</span><br><span class="line">#</span><br><span class="line"># 安装指定版本的Docker-CE:</span><br><span class="line"># Step 1: 查找Docker-CE的版本:</span><br><span class="line"># yum list docker-ce.x86_64 --showduplicates | sort -r</span><br><span class="line">#   Loading mirror speeds from cached hostfile</span><br><span class="line">#   Loaded plugins: branch, fastestmirror, langpacks</span><br><span class="line">#   docker-ce.x86_64            17.03.1.ce-1.el7.centos            docker-ce-stable</span><br><span class="line">#   docker-ce.x86_64            17.03.1.ce-1.el7.centos            @docker-ce-stable</span><br><span class="line">#   docker-ce.x86_64            17.03.0.ce-1.el7.centos            docker-ce-stable</span><br><span class="line">#   Available Packages</span><br><span class="line"># Step2 : 安装指定版本的Docker-CE: (VERSION 例如上面的 17.03.0.ce.1-1.el7.centos)</span><br><span class="line"># sudo yum -y install docker-ce-[VERSION]</span><br><span class="line"># 注意：在某些版本之后，docker-ce安装出现了其他依赖包，如果安装失败的话请关注错误信息。例如 docker-ce 17.03 之后，需要先安装 docker-ce-selinux。</span><br><span class="line"># yum list docker-ce-selinux- --showduplicates | sort -r</span><br><span class="line"># sudo yum -y install docker-ce-selinux-[VERSION]</span><br><span class="line"></span><br><span class="line"># 通过经典网络、VPC网络内网安装时，用以下命令替换Step 2中的命令</span><br><span class="line"># 经典网络：</span><br><span class="line"># sudo yum-config-manager --add-repo http://mirrors.aliyuncs.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"># VPC网络：</span><br><span class="line"># sudo yum-config-manager --add-repo http://mirrors.could.aliyuncs.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><h3 id="ubuntu-使用apt-get进行安装"><a href="#ubuntu-使用apt-get进行安装" class="headerlink" title="ubuntu (使用apt-get进行安装)"></a>ubuntu (使用apt-get进行安装)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"># step 1: 安装必要的一些系统工具</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common</span><br><span class="line"># step 2: 安装GPG证书</span><br><span class="line">curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line"># Step 3: 写入软件源信息</span><br><span class="line">sudo add-apt-repository &quot;deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable&quot;</span><br><span class="line"># Step 4: 更新并安装 Docker-CE</span><br><span class="line">sudo apt-get -y update</span><br><span class="line">sudo apt-get -y install docker-ce</span><br><span class="line"></span><br><span class="line">注意：其他注意事项在下面的注释中</span><br><span class="line"># 安装指定版本的Docker-CE:</span><br><span class="line"># Step 1: 查找Docker-CE的版本:</span><br><span class="line"># apt-cache madison docker-ce</span><br><span class="line">#   docker-ce | 17.03.1~ce-0~ubuntu-xenial | http://mirrors.aliyun.com/docker-ce/linux/ubuntu xenial/stable amd64 Packages</span><br><span class="line">#   docker-ce | 17.03.0~ce-0~ubuntu-xenial | http://mirrors.aliyun.com/docker-ce/linux/ubuntu xenial/stable amd64 Packages</span><br><span class="line"># Step 2: 安装指定版本的Docker-CE: (VERSION 例如上面的 17.03.1~ce-0~ubuntu-xenial)</span><br><span class="line"># sudo apt-get -y install docker-ce=[VERSION]</span><br><span class="line"></span><br><span class="line"># 通过经典网络、VPC网络内网安装时，用以下命令替换Step 2、Step 3中的命令</span><br><span class="line"># 经典网络：</span><br><span class="line"># curl -fsSL http://mirrors.aliyuncs.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line"># sudo add-apt-repository &quot;deb [arch=amd64] http://mirrors.aliyuncs.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable&quot;</span><br><span class="line"># VPC网络：</span><br><span class="line"># curl -fsSL http://mirrors.cloud.aliyuncs.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line"># sudo add-apt-repository &quot;deb [arch=amd64] http://mirrors.cloud.aliyuncs.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable&quot;</span><br></pre></td></tr></table></figure><h2 id="安装校验"><a href="#安装校验" class="headerlink" title="安装校验"></a>安装校验</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">root@iZbp12adskpuoxodbkqzjfZ:$ docker version</span><br><span class="line">Client:</span><br><span class="line"> Version:      17.03.0-ce</span><br><span class="line"> API version:  1.26</span><br><span class="line"> Go version:   go1.7.5</span><br><span class="line"> Git commit:   3a232c8</span><br><span class="line"> Built:        Tue Feb 28 07:52:04 2017</span><br><span class="line"> OS/Arch:      linux/amd64</span><br><span class="line"></span><br><span class="line">Server:</span><br><span class="line"> Version:      17.03.0-ce</span><br><span class="line"> API version:  1.26 (minimum version 1.12)</span><br><span class="line"> Go version:   go1.7.5</span><br><span class="line"> Git commit:   3a232c8</span><br><span class="line"> Built:        Tue Feb 28 07:52:04 2017</span><br><span class="line"> OS/Arch:      linux/amd64</span><br><span class="line"> Experimental: false</span><br></pre></td></tr></table></figure><h2 id="配置代理源"><a href="#配置代理源" class="headerlink" title="配置代理源"></a>配置代理源</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://es8yt4u0.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload#重启daemon进程</span><br><span class="line">sudo systemctl restart docker#重启docker</span><br></pre></td></tr></table></figure><h1 id="Docker命令"><a href="#Docker命令" class="headerlink" title="Docker命令"></a>Docker命令</h1><h2 id="基本启动"><a href="#基本启动" class="headerlink" title="基本启动"></a>基本启动</h2><p>启动docker</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><p>查看运行状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status docker</span><br></pre></td></tr></table></figure><p>添加自启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure><p>停止docker</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop docker</span><br></pre></td></tr></table></figure><h2 id="镜像命令"><a href="#镜像命令" class="headerlink" title="镜像命令"></a>镜像命令</h2><p>查看当前镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p>搜索镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search 镜像名字</span><br></pre></td></tr></table></figure><h2 id="容器命令"><a href="#容器命令" class="headerlink" title="容器命令"></a>容器命令</h2>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于centos的yum源</title>
      <link href="/2024/11/28/%E5%85%B3%E4%BA%8Ecentos%E7%9A%84yum%E6%BA%90/"/>
      <url>/2024/11/28/%E5%85%B3%E4%BA%8Ecentos%E7%9A%84yum%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<h2 id="centos更换yum源"><a href="#centos更换yum源" class="headerlink" title="centos更换yum源"></a>centos更换yum源</h2><p>如果不更换yum源的话就可能会出现以下结果，无法安装应用</p><p><img src="/images/centosyum/yumcuowu.png"></p><h3 id="首先进入到-etc-yum-repos-d目录"><a href="#首先进入到-etc-yum-repos-d目录" class="headerlink" title="首先进入到/etc/yum.repos.d目录"></a>首先进入到<code>/etc/yum.repos.d</code>目录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/yum.repos.d</span><br></pre></td></tr></table></figure><h3 id="对原来的yum源进行备份"><a href="#对原来的yum源进行备份" class="headerlink" title="对原来的yum源进行备份"></a>对原来的yum源进行备份</h3><p>形成一个后缀为bak的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp CentOS-Base.repo CentOS-Base.repo.bak</span><br></pre></td></tr></table></figure><h3 id="更改yum源"><a href="#更改yum源" class="headerlink" title="更改yum源"></a>更改yum源</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure><p>上方链接可以直接在浏览器输入进行下载，下载下来的文件为<code>Centos-7.repo</code>，可以对其打开，复制其内容</p><h3 id="清除原来样本缓存"><a href="#清除原来样本缓存" class="headerlink" title="清除原来样本缓存"></a>清除原来样本缓存</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum clean all</span><br></pre></td></tr></table></figure><p>生成新的样本缓存</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum makecache</span><br></pre></td></tr></table></figure><p>更新软件包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update -y</span><br></pre></td></tr></table></figure><p>查看yum仓库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum repolist all</span><br></pre></td></tr></table></figure><p><img src="/images/centosyum/yumupdate.png"></p><p>查找yum可以安装的软件包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum search ftp</span><br></pre></td></tr></table></figure><p><code>ftp</code>为软件包名</p><h2 id="安装DNF"><a href="#安装DNF" class="headerlink" title="安装DNF"></a>安装DNF</h2><p>需要先安装依赖然后安装包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-bash: dnf: command not found</span><br><span class="line"> </span><br><span class="line">#CentOS 安装</span><br><span class="line">#安装 epel-release 依赖：</span><br><span class="line">yum install epel-release</span><br><span class="line"> </span><br><span class="line">#安装 DNF 包：</span><br><span class="line">yum install dnf</span><br></pre></td></tr></table></figure><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#与 YUM 基本保持一致，少数用法有区别。</span><br><span class="line">##### 版本</span><br><span class="line">dnf --version  # 查看DNF包管理器版本</span><br><span class="line"> </span><br><span class="line">##### 帮助</span><br><span class="line">dnf help  # 查看所有的DNF命令及其用途</span><br><span class="line">dnf help &lt;command&gt;  # 获取命令的使用帮助</span><br><span class="line">dnf history  # 查看 DNF 命令的执行历史</span><br><span class="line"> </span><br><span class="line">##### 信息查看</span><br><span class="line">dnf repolist  # 查看系统中可用的DNF软件库</span><br><span class="line">dnf search &lt;package&gt;  # 搜索软件库中的RPM包</span><br><span class="line"> </span><br><span class="line">dnf list installed  # 列出所有安装的RPM包</span><br><span class="line">dnf list available  # 列出所有可安装的RPM包</span><br><span class="line">dnf info &lt;package&gt;  # 查看软件包详情</span><br><span class="line"> </span><br><span class="line">dnf provides &lt;file&gt;  # 查找某一文件的提供者</span><br><span class="line"> </span><br><span class="line">##### 软件包操作</span><br><span class="line">dnf install &lt;package&gt;  # 安装软件包及其所需的所有依赖</span><br><span class="line">dnf update &lt;package&gt;  # 升级软件包</span><br><span class="line">dnf remove &lt;package&gt;  # 删除软件包</span><br><span class="line">dnf reinstall &lt;package&gt;  # 重新安装特定软件包</span><br><span class="line">dnf distro-sync  # 更新软件包到最新的稳定发行版</span><br><span class="line"> </span><br><span class="line">##### 系统软件包</span><br><span class="line">dnf check-update  # 检查系统所有软件包的更新</span><br><span class="line">dnf update  # 升级所有系统软件包</span><br><span class="line">dnf clean all  # 删除缓存的无用软件包</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>配置文件位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/dnf/dnf.conf</span><br></pre></td></tr></table></figure><p>代理配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">proxy=http://&lt;ip address&gt;:&lt;port&gt;</span><br><span class="line">proxy_username=&lt;username&gt;</span><br><span class="line">proxy_password=&lt;password&gt;</span><br></pre></td></tr></table></figure><h3 id="安装卸载-control-center"><a href="#安装卸载-control-center" class="headerlink" title="安装卸载 control-center"></a>安装卸载 control-center</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># sudo dnf install control-center</span><br><span class="line"> </span><br><span class="line"># sudo dnf remove control-center</span><br></pre></td></tr></table></figure><h3 id="更新-升级"><a href="#更新-升级" class="headerlink" title="更新 升级"></a>更新 升级</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#升级软件</span><br><span class="line">sudo dnf update</span><br><span class="line"> </span><br><span class="line">#升级系统</span><br><span class="line">sudo dnf upgrade</span><br><span class="line"> </span><br><span class="line">#清除 RPM 包缓存</span><br><span class="line">sudo dnf clean packages</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> centos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语语法</title>
      <link href="/2024/11/27/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/"/>
      <url>/2024/11/27/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="三单"><a href="#三单" class="headerlink" title="三单"></a>三单</h2>]]></content>
      
      
      <categories>
          
          <category> 英语语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c语言笔记</title>
      <link href="/2024/11/27/c%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/11/27/c%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="随机数的使用"><a href="#随机数的使用" class="headerlink" title="随机数的使用"></a><strong>随机数的使用</strong></h3><p>随机数rand</p><p>在使用之前需要引用<code>&lt;stdlib.h&gt;</code>standard library标准库，并且在使用前需要先设置随机数种子。</p><ul><li><code>srand(1)；</code>设置种子为1</li><li><code>int num = rand();</code>调用随机数</li></ul><p>需注意C语言中的随机数，并不是随机的，而是根据种子设置的数值进行数学公式计算</p><p>公式为<code>int num1=(31*num0+13)%100;</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">srand(<span class="number">1</span>);<span class="comment">//1设置种子</span></span><br><span class="line"><span class="type">int</span> num = rand();<span class="comment">//2获取随机数</span></span><br><span class="line"><span class="comment">//输出打印</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, num);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/%5Cimages%5CC%E4%BE%8B%E9%A2%98%5Crand.png"></p><p>可以看到随机数是根据种子一直固定不变的</p><p>这样的随机数并不是我们想要要的，我们需要让他每次计算的数值都并不一样，所以我们需要让种子一直更换，能完成更换的数值就是时间<code>time</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">srand(time(<span class="literal">NULL</span>));</span><br></pre></td></tr></table></figure><p>在用time之前也需要引用<code>#include &lt;time.h&gt;</code>头文件</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    srand(time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,rand());<span class="comment">//输出随机数</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样的结果就会根据时间不停变换值</p><h4 id="随机数的范围"><a href="#随机数的范围" class="headerlink" title="随机数的范围"></a><strong>随机数的范围</strong></h4><p>但是这样还不是随机数的最终形态，我们需要设定范围。默认的随机数最大范围为</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> RAND_MAX 0x7fff</span></span><br></pre></td></tr></table></figure><p>随机数的范围公式为</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rand()%(m-n+<span class="number">1</span>)+n<span class="comment">//m=终数 n=初值</span></span><br></pre></td></tr></table></figure><p>如果我们需要在1~100的范围内获取</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> num = rand()%<span class="number">100</span>+<span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>无论取余的结果是多少最终结果除以100，值就是99，在加上1，就是1~100.</p><p>7~23的范围</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> num = rand()%<span class="number">17</span>+<span class="number">7</span>;</span><br></pre></td></tr></table></figure><p>8~49的范围</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> num = rand() % <span class="number">42</span> + <span class="number">8</span>;</span><br></pre></td></tr></table></figure><p>下面就是最终结果</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">srand(time(<span class="literal">NULL</span>));</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> num1 = rand()%<span class="number">100</span>+<span class="number">1</span>;</span><br><span class="line"><span class="comment">//不管随机数是多少，取余一百后范围肯定在0到99之间</span></span><br><span class="line"><span class="comment">//再加1等于范围在1-100之间</span></span><br><span class="line"><span class="type">int</span> num2 = rand()%<span class="number">17</span>+<span class="number">7</span>;</span><br><span class="line"><span class="comment">//对17取余，结果肯定是0到16再统一加上7就是7到23</span></span><br><span class="line"><span class="type">int</span> num3 = rand() % <span class="number">42</span> + <span class="number">8</span>;</span><br><span class="line"><span class="comment">//尾部+1 50-8等于42 再用42加上8范围就是8到49</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d %d\n&quot;</span>, num1,num2,num3);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/11/25/hello-world/"/>
      <url>/2024/11/25/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ctf</title>
      <link href="/2024/11/25/ctf/"/>
      <url>/2024/11/25/ctf/</url>
      
        <content type="html"><![CDATA[<h2 id="Sqlmap注入参数"><a href="#Sqlmap注入参数" class="headerlink" title="Sqlmap注入参数"></a>Sqlmap注入参数</h2><h3 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;地址&quot; --current-db --batch</span><br><span class="line">sqlmap -u &quot;地址&quot; -D 库名 --tables --batch</span><br><span class="line">sqlmap -u &quot;地址&quot; -D 库名 -T 表名 --dump --batch</span><br></pre></td></tr></table></figure><ul><li>–current-db获取当前使用的数据库</li><li>–batch保持默认选项</li><li>-D参数用来指定库名</li><li>–tables用来获取-D参数指定的库下的所有表名</li><li>-T用来指定表名</li><li>–dump表示获取表的数据</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C例题</title>
      <link href="/2024/11/25/C%E4%BE%8B%E9%A2%98/"/>
      <url>/2024/11/25/C%E4%BE%8B%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h3 id="判断数组中最大值"><a href="#判断数组中最大值" class="headerlink" title="判断数组中最大值"></a><strong>判断数组中最大值</strong></h3><p>要求：</p><p>输入多个整数（一行），输出其中最大的整数。<br>输入格式：一行多个整数，用空格隔开。<br>输出格式：一个整数。<br>输入输出样例<br><code>1 2 3 4 5 6</code><br>输出<br><code>6</code><br>说明&#x2F;提示：最大的数为 6，即输出 6。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;  </span><br><span class="line">    <span class="type">int</span> maxnum = <span class="number">0</span>; </span><br><span class="line">    <span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;num)!=EOF)&#123;<span class="comment">//读到结尾停止读取</span></span><br><span class="line">        <span class="keyword">if</span>(num&gt;maxnum)  <span class="comment">//判断是否为最大值</span></span><br><span class="line">            maxnum=num;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,maxnum);  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="求n的阶乘"><a href="#求n的阶乘" class="headerlink" title="求n的阶乘"></a><strong>求n的阶乘</strong></h3><p>要求：</p><p>输入：<code>5。</code><br>输出：<code>120。</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">b</span><span class="params">(<span class="type">int</span> a)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="type">int</span> temp=b(n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,b(n));</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">b</span><span class="params">(<span class="type">int</span> a)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a * b(a - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="合并为新数"><a href="#合并为新数" class="headerlink" title="合并为新数"></a><strong>合并为新数</strong></h3><p>要求：</p><p>编写函数fun，其功能是：将a、b中的两个两位正整数合并成一个新的整数。</p><p>合并的方式是：将a中的十位和个位数依次放在临时变量c的百位和个位上，b中的十位和个位数依次放在该变量c的十位和千位上。函数fun返回变量c的值。例如，当a＝45，b＝12，调用该函数后返回值为2415。</p><p>效果如下：</p><p>输入：<code>45  12</code>。<br>输出：<code>2415</code>。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span><br><span class="line">&#123;     <span class="type">int</span>  c;   <span class="comment">//12</span></span><br><span class="line">     <span class="type">int</span> temp=a%<span class="number">10</span>;</span><br><span class="line">     <span class="type">int</span> temp2=a/<span class="number">10</span>;</span><br><span class="line">     <span class="type">int</span> temp3=b%<span class="number">10</span>;</span><br><span class="line">     <span class="type">int</span> temp4=b/<span class="number">10</span>;</span><br><span class="line">     c=(temp2*<span class="number">100</span>)+temp+(temp3*<span class="number">1000</span>)+(temp4*<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">        <span class="type">int</span>   a,b, c;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">        c=fun(a, b);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%ld\n&quot;</span>, c);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="判断一个数是否为素数"><a href="#判断一个数是否为素数" class="headerlink" title="判断一个数是否为素数"></a><strong>判断一个数是否为素数</strong></h3><p>要求：</p><p>编写一个函数prime，判断一个正整数是否为素数，如果是素数，函数返回1，否则返回0。在主函数中输入一个正整数，调用prime判断它是否为素数并输出。</p><p>输入：<code>21</code> 。<br>输出：<code>no</code>。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">// 判断一个正整数是否为素数的函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">prime</span><span class="params">(<span class="type">int</span> num)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (num &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">// 1 及以下的数不是素数</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i * i &lt;= num; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (num % i == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">// 如果能被 i 整除，则不是素数</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>; <span class="comment">// 是素数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> number;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;number);</span><br><span class="line">    <span class="comment">// 调用 prime 函数判断是否为素数</span></span><br><span class="line">    <span class="keyword">if</span> (prime(number)) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;yes&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> c 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2024/11/25/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2024/11/25/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第1篇文章java</title>
      <link href="/2023/11/27/%E7%AC%AC1%E7%AF%87%E6%96%87%E7%AB%A0java/"/>
      <url>/2023/11/27/%E7%AC%AC1%E7%AF%87%E6%96%87%E7%AB%A0java/</url>
      
        <content type="html"><![CDATA[<h1 id="这是一篇java文章的1级标题"><a href="#这是一篇java文章的1级标题" class="headerlink" title="这是一篇java文章的1级标题"></a>这是一篇java文章的1级标题</h1><h2 id="这是一篇java文章的2级标题"><a href="#这是一篇java文章的2级标题" class="headerlink" title="这是一篇java文章的2级标题"></a>这是一篇java文章的2级标题</h2><p><img src="/../images/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/2.png"></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
